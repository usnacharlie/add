version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: member_registry_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-member_registry}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: member_registry_backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-member_registry}
    ports:
      - "9500:9500"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn backend.main:app --host 0.0.0.0 --port 9500 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: member_registry_frontend
    environment:
      API_BASE_URL: http://backend:9500/api/v1
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
    ports:
      - "9100:9100"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: python app.py

volumes:
  postgres_data:
