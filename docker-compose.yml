version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: member_registry_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-member_registry}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: member_registry_backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-member_registry}
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-jwt-secret-key-change-in-production}
    ports:
      - "9500:9500"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    command: sh -c "python3 -c 'from backend.config.database import init_db; init_db()' && uvicorn backend.main:app --host 0.0.0.0 --port 9500 --reload"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: member_registry_frontend
    environment:
      API_BASE_URL: http://backend:9500/api/v1
      SECRET_KEY: ${SECRET_KEY:-dev-secret-key-change-in-production}
      FLASK_ENV: ${FLASK_ENV:-production}
    ports:
      - "9100:9100"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_uploads:/app/static/uploads
    command: python app.py
    restart: unless-stopped

  ussd:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: member_registry_ussd
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-member_registry}
      API_BASE_URL: http://backend:9500/api/v1
      USSD_PORT: 57023
    ports:
      - "57023:57023"
    depends_on:
      - backend
      - postgres
    volumes:
      - ./backend:/app
    command: python3 ussd_service.py
    restart: unless-stopped

volumes:
  postgres_data:
  backend_uploads:
  frontend_uploads:
